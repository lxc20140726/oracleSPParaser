version: '3.8'

services:
  # 后端API服务
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=production
      - DB_HOST=${DB_HOST:-localhost}
      - DB_PORT=${DB_PORT:-1521}
      - DB_SERVICE_NAME=${DB_SERVICE_NAME:-ORCL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
    depends_on:
      - oracle-db
    restart: unless-stopped
    networks:
      - oracle-sp-network

  # 前端服务
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - oracle-sp-network

  # Oracle数据库（可选，用于测试）
  oracle-db:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    ports:
      - "1521:1521"
      - "5500:5500"
    environment:
      - ORACLE_PWD=${ORACLE_PWD:-oracle123}
      - ORACLE_CHARACTERSET=AL32UTF8
    volumes:
      - oracle-data:/opt/oracle/oradata
      - ../examples/sample_procedures:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - oracle-sp-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ../frontend/build:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - oracle-sp-network

volumes:
  oracle-data:

networks:
  oracle-sp-network:
    driver: bridge 